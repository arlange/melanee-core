«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION xpt::editor::Utils»

«AROUND InitDiagramFileAction FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND xpt::editor::InitDiagramFileAction::className»
	«IF editorGen.application == null-»
implements org.eclipse.ui.IObjectActionDelegate {

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.ui.IWorkbenchPart targetPart;

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.emf.common.util.URI domainModelURI;

	«EXPAND xpt::Common::generatedMemberComment»
	public void setActivePart(org.eclipse.jface.action.IAction action, org.eclipse.ui.IWorkbenchPart targetPart) {
		this.targetPart = targetPart;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void selectionChanged(org.eclipse.jface.action.IAction action, org.eclipse.jface.viewers.ISelection selection) {
		domainModelURI = null;
		action.setEnabled(false);
		if (selection instanceof org.eclipse.jface.viewers.IStructuredSelection == false || selection.isEmpty()) {
			return;
		}
		org.eclipse.core.resources.IFile file =
			(org.eclipse.core.resources.IFile) ((org.eclipse.jface.viewers.IStructuredSelection) selection).getFirstElement();
		domainModelURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI(file.getFullPath().toString(), true);
		action.setEnabled(true);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.swt.widgets.Shell getShell() {
		return targetPart.getSite().getShell();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void run(org.eclipse.jface.action.IAction action) {
		// ITEMIS CHANGE: Use shared editing domain
		//org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain =
		//	org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory.INSTANCE.createEditingDomain();
		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = de.itemis.gmf.runtime.editingdomain.SharedEditingDomainUtil.getSharedEditingDomain("«editingDomainID»");
		
		«IF editorGen.sameFileForDiagramAndModel-»
		org.eclipse.emf.ecore.resource.ResourceSet resourceSet = new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();
		«ELSE-»
		org.eclipse.emf.ecore.resource.ResourceSet resourceSet = editingDomain.getResourceSet();
		«ENDIF-»
		org.eclipse.emf.ecore.EObject diagramRoot = null;
		try {
			org.eclipse.emf.ecore.resource.Resource resource = resourceSet.getResource(domainModelURI, true);
			diagramRoot = (org.eclipse.emf.ecore.EObject) resource.getContents().get(0);
		} catch (org.eclipse.emf.common.util.WrappedException ex) {
			«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError(
				"Unable to load resource: " + domainModelURI, ex); «EXPAND xpt::Common::nonNLS»
		}
		if (diagramRoot == null) {
			org.eclipse.jface.dialogs.MessageDialog.openError(getShell(), 
                «EXPAND xpt::Externalizer::accessorCall(i18nKeyForInitDiagramFileResourceErrorDialog().titleKey()) FOR editorGen»,
                «EXPAND xpt::Externalizer::accessorCall(i18nKeyForInitDiagramFileResourceErrorDialog().messageKey()) FOR editorGen»);
			return;
		}
		org.eclipse.jface.wizard.Wizard wizard = new «getNewDiagramFileWizardQualifiedClassName()»(domainModelURI, diagramRoot, editingDomain);
		wizard.setWindowTitle(org.eclipse.osgi.util.NLS.bind(
				    «EXPAND xpt::Externalizer::accessorCall(i18nKeyForInitDiagramFileWizardTitle()) FOR editorGen»,
				    «EXPAND xpt::editor::VisualIDRegistry::modelID»));
		«getDiagramEditorUtilQualifiedClassName()».runWizard(getShell(), wizard, "InitDiagramFile"); «EXPAND xpt::Common::nonNLS»
	}
	«ELSE-»
implements org.eclipse.ui.IWorkbenchWindowActionDelegate {

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.ui.IWorkbenchWindow window;

	«EXPAND xpt::Common::generatedMemberComment»
	public void init(org.eclipse.ui.IWorkbenchWindow window) {
		this.window = window;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void dispose() {
		window = null;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void selectionChanged(org.eclipse.jface.action.IAction action, org.eclipse.jface.viewers.ISelection selection) {
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.swt.widgets.Shell getShell() {
		return window.getShell();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public void run(org.eclipse.jface.action.IAction action) {
		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain =
			org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory.INSTANCE.createEditingDomain();
		org.eclipse.emf.ecore.resource.Resource resource =
				«getDiagramEditorUtilQualifiedClassName()».openModel(getShell(), 
					«EXPAND xpt::Externalizer::accessorCall(i18nKeyForInitDiagramOpenFileDialogTitle()) FOR editorGen», editingDomain);
		if (resource == null || resource.getContents().isEmpty()) {
			return;
		}
		org.eclipse.emf.ecore.EObject diagramRoot = (org.eclipse.emf.ecore.EObject) resource.getContents().get(0);
		org.eclipse.jface.wizard.Wizard wizard = new «getNewDiagramFileWizardQualifiedClassName()»(resource.getURI(), diagramRoot, editingDomain);
		wizard.setWindowTitle(org.eclipse.osgi.util.NLS.bind(
				    «EXPAND xpt::Externalizer::accessorCall(i18nKeyForInitDiagramFileWizardTitle()) FOR editorGen»,
				    «EXPAND xpt::editor::VisualIDRegistry::modelID»));
		«getDiagramEditorUtilQualifiedClassName()».runWizard(getShell(), wizard, "InitDiagramFile"); «EXPAND xpt::Common::nonNLS»
	}
	«ENDIF-»
}
«ENDAROUND»
