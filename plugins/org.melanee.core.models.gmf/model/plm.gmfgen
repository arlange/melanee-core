<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel"
    packageNamePrefix="org.melanee.core.modeleditor"
    modelID="LML"
    sameFileForDiagramAndModel="true"
    diagramFileExtension="lml"
    dynamicTemplates="true"
    templateDirectory="/org.melanee.core.models.gmf/templates"
    copyrightText="*******************************************************************************&#xD;&#xA;Copyright (c) 2011 - 2015 University of Mannheim: Chair for Software Engineering&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v1.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;http://www.eclipse.org/legal/epl-v10.html&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;     - initial API and implementation and initial documentation&#xD;&#xA;*******************************************************************************">
  <audits>
    <categories
        id="org.melanee.core.auditcontainer"
        name="MelaneeAuditContainer"
        description="!!!!! THIS CONTAINER IS NEEDED SO THAT A CLIENT CONTEXT FOR GENERATION IS GENERATED !!!!!!"
        path="//@audits/@categories.0"
        audits="//@audits/@rules.0"/>
    <rules
        name="EMPTY AUDIT RULE"
        description="EMPTY AUDIT RULE"
        id="org.melanee.core.emptyrule"
        rule="//@expressionProviders/@providers.0/@expressions.52"
        message="EMPTY AUDIT RULE"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Domain"/>
      </target>
    </rules>
    <clientContexts
        ruleTargets="//@audits/@rules.0/@target"/>
  </audits>
  <diagram
      visualID="1000"
      editPartClassName="DomainEditPart"
      itemSemanticEditPolicyClassName="DomainItemSemanticEditPolicy"
      canonicalEditPolicyClassName="DomainCanonicalEditPolicy"
      iconProviderPriority="Low"
      creationWizardIconPath="icons/melanee16.gif"
      creationWizardCategoryID="org.melanee.melaneecategory"
      validationProviderPriority="Medium"
      validationEnabled="true"
      validationDecorators="true"
      validationDecoratorProviderPriority="Medium">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="DomainEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Domain"/>
    <childNodes
        visualID="3123"
        editPartClassName="EnumerationEditPart"
        itemSemanticEditPolicyClassName="EnumerationItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EnumerationCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="EnumerationGraphicalNodeEditPolicy"
        createCommandClassName="EnumerationCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EnumerationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="EnumerationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EnumerationFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEnumerationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEnumerationLiteralsFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EnumerationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setFill(false);&#xA;this.setOpaque(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEnumerationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEnumerationNameFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureEnumerationNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureEnumerationLiteralsFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEnumerationLiteralsFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureEnumerationLiteralsFigure);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOpaque(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEnumerationNameFigure() {&#xA;&#x9;&#x9;return fFigureEnumerationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEnumerationLiteralsFigure() {&#xA;&#x9;&#x9;return fFigureEnumerationLiteralsFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Enumeration"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel/enumeration"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel/enumeration"/>
      </modelFacet>
      <labels
          visualID="5329"
          editPartClassName="EnumerationNameEditPart"
          itemSemanticEditPolicyClassName="EnumerationNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEnumerationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            editorPattern="">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
          <editableMetaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5330"
          editPartClassName="EnumerationLiteralEditPart"
          itemSemanticEditPolicyClassName="EnumerationLiteralItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEnumerationLiteralsFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="{0}">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Enumeration/literal"/>
          <editableMetaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Enumeration/literal"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3097"
        editPartClassName="LevelEditPart"
        itemSemanticEditPolicyClassName="LevelItemSemanticEditPolicy"
        canonicalEditPolicyClassName="LevelCanonicalEditPolicy"
        compartments="//@diagram/@compartments.2"
        graphicalNodeEditPolicyClassName="LevelGraphicalNodeEditPolicy"
        createCommandClassName="LevelCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="LevelEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ModelFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ModelFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDeepModelLevelNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDeepModelLevelAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureDomainElementsContainer; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ModelFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ResizableFlowLayout layoutThis = new de.itemis.gmf.runtime.layout.ResizableFlowLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;nameRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 2;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 3;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureDeepModelLevelNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureDeepModelLevelNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureDeepModelLevelNameFigure.setFont(FFIGUREDEEPMODELLEVELNAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureDeepModelLevelNameFigure.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDeepModelLevelNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDeepModelLevelNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelLevelNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureDeepModelLevelNameFigure.horizontalIndent = 0;&#xA;constraintFFigureDeepModelLevelNameFigure.horizontalSpan = 1;&#xA;constraintFFigureDeepModelLevelNameFigure.verticalSpan = 1;&#xA;constraintFFigureDeepModelLevelNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureDeepModelLevelNameFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureDeepModelLevelNameFigure, constraintFFigureDeepModelLevelNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDeepModelLevelAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureDeepModelLevelAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureDeepModelLevelAVSFigure.setFont(FFIGUREDEEPMODELLEVELAVSFIGURE_FONT);&#xA;&#xA;&#xA;fFigureDeepModelLevelAVSFigure.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDeepModelLevelAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDeepModelLevelAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelLevelAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureDeepModelLevelAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureDeepModelLevelAVSFigure.horizontalSpan = 1;&#xA;constraintFFigureDeepModelLevelAVSFigure.verticalSpan = 1;&#xA;constraintFFigureDeepModelLevelAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDeepModelLevelAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureDeepModelLevelAVSFigure, constraintFFigureDeepModelLevelAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDomainElementsContainer = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureDomainElementsContainer.setFill(false);&#xA;fFigureDomainElementsContainer.setOutline(false);&#xA;&#xA;this.add(fFigureDomainElementsContainer);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;org.melanee.core.modeleditor.custom.borders.CustomBorder result = new org.melanee.core.modeleditor.custom.borders.CustomBorder();&#xA;&#x9;&#x9;result.setBottom(true);&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDeepModelLevelNameFigure() {&#xA;&#x9;&#x9;return fFigureDeepModelLevelNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDeepModelLevelAVSFigure() {&#xA;&#x9;&#x9;return fFigureDeepModelLevelAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureDomainElementsContainer() {&#xA;&#x9;&#x9;return fFigureDomainElementsContainer;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDEEPMODELLEVELNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDEEPMODELLEVELAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.1">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.2">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5320"
          editPartClassName="LevelNameEditPart"
          itemSemanticEditPolicyClassName="LevelNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDeepModelLevelNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5321"
          editPartClassName="WrappingLabel3EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel3ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDeepModelLevelAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.46"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3099"
        editPartClassName="ConnectionEditPart"
        itemSemanticEditPolicyClassName="ConnectionItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionCanonicalEditPolicy"
        compartments="//@diagram/@compartments.3 //@diagram/@compartments.4 //@diagram/@compartments.5"
        graphicalNodeEditPolicyClassName="ConnectionGraphicalNodeEditPolicy"
        createCommandClassName="ConnectionCreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ConnectionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="ConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVisualizerCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(42)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintNameRectangle1.horizontalIndent = 0;&#xA;constraintNameRectangle1.horizontalSpan = 1;&#xA;constraintNameRectangle1.verticalSpan = 1;&#xA;constraintNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(nameRectangle1, constraintNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 5;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutNameRectangle1.marginHeight = 3;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setFont(FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityInheritanceFigure, constraintFFigureConnectionProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setFont(FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityContainmentFigure, constraintFFigureConnectionProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionNameFigure.setFont(FFIGURECONNECTIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureConnectionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionNameFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionNameFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionNameFigure, constraintFFigureConnectionNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionPotencyFigure.setFont(FFIGURECONNECTIONPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionPotencyFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionPotencyFigure, constraintFFigureConnectionPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setFont(FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityClassificationFigure, constraintFFigureConnectionProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionLevelFigure.setFont(FFIGURECONNECTIONLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionLevelFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionLevelFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionLevelFigure, constraintFFigureConnectionLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionAVSFigure.setFont(FFIGURECONNECTIONAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureConnectionAVSFigure.verticalSpan = 1;&#xA;constraintFFigureConnectionAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionAVSFigure, constraintFFigureConnectionAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureContentCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setFill(false);&#xA;fFigureVisualizerCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureVisualizerCompartmentRectangle, constraintFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureVisualizerCompartmentRectangle.setLayoutManager(layoutFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionPotencyFigure() {&#xA;&#x9;&#x9;return fFigureConnectionPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionLevelFigure() {&#xA;&#x9;&#x9;return fFigureConnectionLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionAVSFigure() {&#xA;&#x9;&#x9;return fFigureConnectionAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVisualizerCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureVisualizerCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.3">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5294"
          editPartClassName="WrappingLabel4EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel4ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.26"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5295"
          editPartClassName="ConnectionNameEditPart"
          itemSemanticEditPolicyClassName="ConnectionNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5296"
          editPartClassName="WrappingLabel5EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel5ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.27"/>
      </labels>
      <labels
          visualID="5297"
          editPartClassName="WrappingLabel6EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel6ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.28"/>
      </labels>
      <labels
          visualID="5298"
          editPartClassName="WrappingLabel7EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel7ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.29"/>
      </labels>
      <labels
          visualID="5299"
          editPartClassName="WrappingLabel8EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel8ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.30"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3100"
        editPartClassName="AttributeEditPart"
        itemSemanticEditPolicyClassName="AttributeItemSemanticEditPolicy"
        canonicalEditPolicyClassName="AttributeCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="AttributeGraphicalNodeEditPolicy"
        createCommandClassName="AttributeCreateCommand"
        containers="//@diagram/@compartments.3 //@diagram/@compartments.9 //@diagram/@compartments.19">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="AttributeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="AttributeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AttributeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDurabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDataTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDefaultValueFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeVariabilityFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AttributeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 5;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureAttributeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeNameFigure.setFont(FFIGUREATTRIBUTENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeNameFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeNameFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeNameFigure, constraintFFigureAttributeNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDurabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDurabilityFigure.setFont(FFIGUREATTRIBUTEDURABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDurabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDurabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDurabilityFigure, constraintFFigureAttributeDurabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDataTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDataTypeFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDataTypeFigure.setFont(FFIGUREATTRIBUTEDATATYPEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDataTypeFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDataTypeFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDataTypeFigure, constraintFFigureAttributeDataTypeFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDefaultValueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDefaultValueFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDefaultValueFigure.setFont(FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDefaultValueFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDefaultValueFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDefaultValueFigure, constraintFFigureAttributeDefaultValueFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeVariabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeVariabilityFigure.setFont(FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeVariabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeVariabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeVariabilityFigure, constraintFFigureAttributeVariabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeNameFigure() {&#xA;&#x9;&#x9;return fFigureAttributeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDurabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDurabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDataTypeFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDataTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDefaultValueFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDefaultValueFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeVariabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeVariabilityFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDURABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDATATYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.4">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.5">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Feature/durability"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.6">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute/mutability"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5254"
          editPartClassName="AttributeNameEditPart"
          itemSemanticEditPolicyClassName="AttributeNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5255"
          editPartClassName="WrappingLabel9EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel9ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDurabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.1"/>
      </labels>
      <labels
          visualID="5256"
          editPartClassName="WrappingLabel10EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel10ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDataTypeFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.2"/>
      </labels>
      <labels
          visualID="5257"
          editPartClassName="WrappingLabel11EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel11ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDefaultValueFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.3"/>
      </labels>
      <labels
          visualID="5258"
          editPartClassName="WrappingLabel12EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel12ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeVariabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.4"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3102"
        editPartClassName="MethodEditPart"
        itemSemanticEditPolicyClassName="MethodItemSemanticEditPolicy"
        canonicalEditPolicyClassName="MethodCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="MethodGraphicalNodeEditPolicy"
        createCommandClassName="MethodCreateCommand"
        containers="//@diagram/@compartments.4 //@diagram/@compartments.10 //@diagram/@compartments.20">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="MethodEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="MethodFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MethodFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodOutputFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodInputFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MethodFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 4;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMethodNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodNameFigure.setFont(FFIGUREMETHODNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodNameFigure.verticalSpan = 1;&#xA;constraintFFigureMethodNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodNameFigure, constraintFFigureMethodNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodPotencyFigure.setFont(FFIGUREMETHODPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodPotencyFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodPotencyFigure, constraintFFigureMethodPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodInputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodInputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodInputFigure.setFont(FFIGUREMETHODINPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodInputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodInputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodInputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodInputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodInputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodInputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodInputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodInputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodInputFigure, constraintFFigureMethodInputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodOutputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodOutputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodOutputFigure.setFont(FFIGUREMETHODOUTPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodOutputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodOutputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodOutputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodOutputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodOutputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodOutputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodOutputFigure, constraintFFigureMethodOutputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodNameFigure() {&#xA;&#x9;&#x9;return fFigureMethodNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodPotencyFigure() {&#xA;&#x9;&#x9;return fFigureMethodPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodOutputFigure() {&#xA;&#x9;&#x9;return fFigureMethodOutputFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodInputFigure() {&#xA;&#x9;&#x9;return fFigureMethodInputFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODINPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODOUTPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.11">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.12">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Feature/durability"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5261"
          editPartClassName="MethodNameEditPart"
          itemSemanticEditPolicyClassName="MethodNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5262"
          editPartClassName="WrappingLabel13EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel13ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodInputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.5"/>
      </labels>
      <labels
          visualID="5263"
          editPartClassName="WrappingLabel14EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel14ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.6"/>
      </labels>
      <labels
          visualID="5264"
          editPartClassName="WrappingLabel15EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel15ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodOutputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.7"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3105"
        editPartClassName="EntityEditPart"
        itemSemanticEditPolicyClassName="EntityItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityCanonicalEditPolicy"
        compartments="//@diagram/@compartments.6 //@diagram/@compartments.7 //@diagram/@compartments.8"
        graphicalNodeEditPolicyClassName="EntityGraphicalNodeEditPolicy"
        createCommandClassName="EntityCreateCommand"
        containers="//@diagram/@compartments.8 //@diagram/@compartments.11 //@diagram/@compartments.5 //@diagram/@compartments.14 //@diagram/@compartments.18 //@diagram/@compartments.21">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntityEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityPotencyLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintInnerRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintInnerRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalIndent = 0;&#xA;constraintInnerRectangle0.horizontalSpan = 1;&#xA;constraintInnerRectangle0.verticalSpan = 1;&#xA;constraintInnerRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintInnerRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(innerRectangle0, constraintInnerRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure entityNameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;entityNameRectangle1.setFill(false);&#xA;entityNameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintEntityNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintEntityNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalIndent = 0;&#xA;constraintEntityNameRectangle1.horizontalSpan = 1;&#xA;constraintEntityNameRectangle1.verticalSpan = 1;&#xA;constraintEntityNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintEntityNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(entityNameRectangle1, constraintEntityNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutEntityNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutEntityNameRectangle1.numColumns = 5;&#xA;&#x9;layoutEntityNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutEntityNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutEntityNameRectangle1.marginHeight = 0;&#xA;&#x9;entityNameRectangle1.setLayoutManager(layoutEntityNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setFont(FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityInheritanceFigure, constraintFFigureEntityProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityContainmentFigure.setFont(FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityContainmentFigure, constraintFFigureEntityProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityNameFigure.setFont(FFIGUREENTITYNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityNameFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityNameFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityNameFigure.verticalSpan = 4;&#xA;constraintFFigureEntityNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityNameFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityNameFigure, constraintFFigureEntityNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityPotencyLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityPotencyLabel.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityPotencyLabel.setFont(FFIGUREENTITYPOTENCYLABEL_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityPotencyLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityPotencyLabel.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityPotencyLabel.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityPotencyLabel.horizontalIndent = 0;&#xA;constraintFFigureEntityPotencyLabel.horizontalSpan = 1;&#xA;constraintFFigureEntityPotencyLabel.verticalSpan = 2;&#xA;constraintFFigureEntityPotencyLabel.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityPotencyLabel.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityPotencyLabel, constraintFFigureEntityPotencyLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityClassificationFigure.setFont(FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityClassificationFigure, constraintFFigureEntityProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityLevelFigure.setFont(FFIGUREENTITYLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityLevelFigure.verticalSpan = 2;&#xA;constraintFFigureEntityLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityLevelFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityLevelFigure, constraintFFigureEntityLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityAVSFigure.setFont(FFIGUREENTITYAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureEntityAVSFigure.verticalSpan = 1;&#xA;constraintFFigureEntityAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityAVSFigure.grabExcessVerticalSpace = false;&#xA;entityNameRectangle1.add(fFigureEntityAVSFigure, constraintFFigureEntityAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;de.itemis.gmf.runtime.layout.ResizableFlowLayout layoutFFigureContentCompartmentRectangle = new de.itemis.gmf.runtime.layout.ResizableFlowLayout();&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityNameFigure() {&#xA;&#x9;&#x9;return fFigureEntityNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityAVSFigure() {&#xA;&#x9;&#x9;return fFigureEntityAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityPotencyLabel() {&#xA;&#x9;&#x9;return fFigureEntityPotencyLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityLevelFigure() {&#xA;&#x9;&#x9;return fFigureEntityLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPOTENCYLABEL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.16">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5288"
          editPartClassName="WrappingLabel16EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel16ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.21"/>
      </labels>
      <labels
          visualID="5289"
          editPartClassName="WrappingLabel17EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel17ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityPotencyLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.22"/>
      </labels>
      <labels
          visualID="5290"
          editPartClassName="WrappingLabel18EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel18ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.23"/>
      </labels>
      <labels
          visualID="5291"
          editPartClassName="WrappingLabel19EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel19ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.24"/>
      </labels>
      <labels
          visualID="5292"
          editPartClassName="WrappingLabel20EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel20ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5293"
          editPartClassName="ConnectionNameExternalLabelEditPart"
          itemSemanticEditPolicyClassName="ConnectionNameExternalLabelItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3106"
        editPartClassName="Attribute2EditPart"
        itemSemanticEditPolicyClassName="Attribute2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Attribute2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Attribute2GraphicalNodeEditPolicy"
        createCommandClassName="Attribute2CreateCommand"
        containers="//@diagram/@compartments.6 //@diagram/@compartments.12 //@diagram/@compartments.16">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.3/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="AttributeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AttributeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDurabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDataTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDefaultValueFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeVariabilityFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AttributeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 5;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureAttributeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeNameFigure.setFont(FFIGUREATTRIBUTENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeNameFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeNameFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeNameFigure, constraintFFigureAttributeNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDurabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDurabilityFigure.setFont(FFIGUREATTRIBUTEDURABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDurabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDurabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDurabilityFigure, constraintFFigureAttributeDurabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDataTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDataTypeFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDataTypeFigure.setFont(FFIGUREATTRIBUTEDATATYPEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDataTypeFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDataTypeFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDataTypeFigure, constraintFFigureAttributeDataTypeFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDefaultValueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeDefaultValueFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDefaultValueFigure.setFont(FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDefaultValueFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDefaultValueFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeDefaultValueFigure, constraintFFigureAttributeDefaultValueFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureAttributeVariabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeVariabilityFigure.setFont(FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeVariabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeVariabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributeVariabilityFigure, constraintFFigureAttributeVariabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeNameFigure() {&#xA;&#x9;&#x9;return fFigureAttributeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDurabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDurabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDataTypeFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDataTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDefaultValueFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDefaultValueFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeVariabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeVariabilityFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDURABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDATATYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.17">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.18">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Feature/durability"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.19">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute/mutability"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5269"
          editPartClassName="AttributeName2EditPart"
          itemSemanticEditPolicyClassName="AttributeName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            viewPattern="">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5270"
          editPartClassName="WrappingLabel21EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel21ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDurabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.8"/>
      </labels>
      <labels
          visualID="5271"
          editPartClassName="WrappingLabel22EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel22ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDataTypeFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.9"/>
      </labels>
      <labels
          visualID="5272"
          editPartClassName="WrappingLabel23EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel23ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDefaultValueFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.10"/>
      </labels>
      <labels
          visualID="5273"
          editPartClassName="WrappingLabel24EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel24ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeVariabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.11"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3108"
        editPartClassName="Method2EditPart"
        itemSemanticEditPolicyClassName="Method2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Method2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Method2GraphicalNodeEditPolicy"
        createCommandClassName="Method2CreateCommand"
        containers="//@diagram/@compartments.7 //@diagram/@compartments.13 //@diagram/@compartments.17">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.4/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="MethodFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MethodFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodOutputFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodInputFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MethodFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 4;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMethodNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodNameFigure.setFont(FFIGUREMETHODNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodNameFigure.verticalSpan = 1;&#xA;constraintFFigureMethodNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodNameFigure, constraintFFigureMethodNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodPotencyFigure.setFont(FFIGUREMETHODPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodPotencyFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodPotencyFigure, constraintFFigureMethodPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodInputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodInputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodInputFigure.setFont(FFIGUREMETHODINPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodInputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodInputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodInputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodInputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodInputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodInputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodInputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodInputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodInputFigure, constraintFFigureMethodInputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodOutputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureMethodOutputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodOutputFigure.setFont(FFIGUREMETHODOUTPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodOutputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodOutputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodOutputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodOutputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodOutputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodOutputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodOutputFigure, constraintFFigureMethodOutputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodNameFigure() {&#xA;&#x9;&#x9;return fFigureMethodNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodPotencyFigure() {&#xA;&#x9;&#x9;return fFigureMethodPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodOutputFigure() {&#xA;&#x9;&#x9;return fFigureMethodOutputFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodInputFigure() {&#xA;&#x9;&#x9;return fFigureMethodInputFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODINPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODOUTPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/feature"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.24">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.25">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Feature/durability"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5276"
          editPartClassName="MethodName2EditPart"
          itemSemanticEditPolicyClassName="MethodName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5277"
          editPartClassName="WrappingLabel25EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel25ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodInputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.12"/>
      </labels>
      <labels
          visualID="5278"
          editPartClassName="WrappingLabel26EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel26ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.13"/>
      </labels>
      <labels
          visualID="5279"
          editPartClassName="WrappingLabel27EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel27ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodOutputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.14"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3111"
        editPartClassName="Connection2EditPart"
        itemSemanticEditPolicyClassName="Connection2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Connection2CanonicalEditPolicy"
        compartments="//@diagram/@compartments.9 //@diagram/@compartments.10 //@diagram/@compartments.11"
        graphicalNodeEditPolicyClassName="Connection2GraphicalNodeEditPolicy"
        createCommandClassName="Connection2CreateCommand"
        containers="//@diagram/@compartments.11 //@diagram/@compartments.8 //@diagram/@compartments.5 //@diagram/@compartments.14 //@diagram/@compartments.18 //@diagram/@compartments.21">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.2/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="ConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVisualizerCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(42)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintNameRectangle1.horizontalIndent = 0;&#xA;constraintNameRectangle1.horizontalSpan = 1;&#xA;constraintNameRectangle1.verticalSpan = 1;&#xA;constraintNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(nameRectangle1, constraintNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 5;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutNameRectangle1.marginHeight = 3;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setFont(FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityInheritanceFigure, constraintFFigureConnectionProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setFont(FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityContainmentFigure, constraintFFigureConnectionProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionNameFigure.setFont(FFIGURECONNECTIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureConnectionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionNameFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionNameFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionNameFigure, constraintFFigureConnectionNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionPotencyFigure.setFont(FFIGURECONNECTIONPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionPotencyFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionPotencyFigure, constraintFFigureConnectionPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setFont(FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityClassificationFigure, constraintFFigureConnectionProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionLevelFigure.setFont(FFIGURECONNECTIONLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionLevelFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionLevelFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionLevelFigure, constraintFFigureConnectionLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionAVSFigure.setFont(FFIGURECONNECTIONAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureConnectionAVSFigure.verticalSpan = 1;&#xA;constraintFFigureConnectionAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionAVSFigure, constraintFFigureConnectionAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureContentCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setFill(false);&#xA;fFigureVisualizerCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureVisualizerCompartmentRectangle, constraintFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureVisualizerCompartmentRectangle.setLayoutManager(layoutFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionPotencyFigure() {&#xA;&#x9;&#x9;return fFigureConnectionPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionLevelFigure() {&#xA;&#x9;&#x9;return fFigureConnectionLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionAVSFigure() {&#xA;&#x9;&#x9;return fFigureConnectionAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVisualizerCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureVisualizerCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.3">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5282"
          editPartClassName="WrappingLabel28EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel28ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.16"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5283"
          editPartClassName="ConnectionName2EditPart"
          itemSemanticEditPolicyClassName="ConnectionName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5284"
          editPartClassName="WrappingLabel29EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel29ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.17"/>
      </labels>
      <labels
          visualID="5285"
          editPartClassName="WrappingLabel30EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel30ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.18"/>
      </labels>
      <labels
          visualID="5286"
          editPartClassName="WrappingLabel31EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel31ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.19"/>
      </labels>
      <labels
          visualID="5287"
          editPartClassName="WrappingLabel32EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel32ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.20"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3124"
        editPartClassName="InheritanceEditPart"
        itemSemanticEditPolicyClassName="InheritanceItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InheritanceCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InheritanceGraphicalNodeEditPolicy"
        createCommandClassName="InheritanceCreateCommand"
        containers="//@diagram/@compartments.11 //@diagram/@compartments.8 //@diagram/@compartments.5 //@diagram/@compartments.14 //@diagram/@compartments.18 //@diagram/@compartments.21">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InheritanceEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="GeneralizationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationSubtitleFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationNameFigure.setFont(FFIGUREGENERALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureGeneralisationNameFigure, constraintFFigureGeneralisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationSubtitleFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setFont(FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationSubtitleFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureGeneralisationSubtitleFigure, constraintFFigureGeneralisationSubtitleFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationNameFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationSubtitleFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationSubtitleFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Clabject/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.29">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5333"
          editPartClassName="InheritanceNameEditPart"
          itemSemanticEditPolicyClassName="InheritanceNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5334"
          editPartClassName="InheritanceName2EditPart"
          itemSemanticEditPolicyClassName="InheritanceName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="GeneralizationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralizationNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralizationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureGeneralizationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5335"
          editPartClassName="WrappingLabel33EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel33ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationSubtitleFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.15"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3122"
        editPartClassName="Inheritance2EditPart"
        itemSemanticEditPolicyClassName="Inheritance2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Inheritance2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Inheritance2GraphicalNodeEditPolicy"
        createCommandClassName="Inheritance2CreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.9/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="GeneralizationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationSubtitleFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationNameFigure.setFont(FFIGUREGENERALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureGeneralisationNameFigure, constraintFFigureGeneralisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationSubtitleFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setFont(FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationSubtitleFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureGeneralisationSubtitleFigure, constraintFFigureGeneralisationSubtitleFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationNameFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationSubtitleFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationSubtitleFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.29">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5326"
          editPartClassName="InheritanceName3EditPart"
          itemSemanticEditPolicyClassName="InheritanceName3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5327"
          editPartClassName="InheritanceName4EditPart"
          itemSemanticEditPolicyClassName="InheritanceName4ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="GeneralizationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralizationNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralizationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureGeneralizationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5328"
          editPartClassName="WrappingLabel34EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel34ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationSubtitleFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.31"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3120"
        editPartClassName="Entity2EditPart"
        itemSemanticEditPolicyClassName="Entity2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Entity2CanonicalEditPolicy"
        compartments="//@diagram/@compartments.12 //@diagram/@compartments.13 //@diagram/@compartments.14"
        graphicalNodeEditPolicyClassName="Entity2GraphicalNodeEditPolicy"
        createCommandClassName="Entity2CreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.5/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityPotencyLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintInnerRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintInnerRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalIndent = 0;&#xA;constraintInnerRectangle0.horizontalSpan = 1;&#xA;constraintInnerRectangle0.verticalSpan = 1;&#xA;constraintInnerRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintInnerRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(innerRectangle0, constraintInnerRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure entityNameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;entityNameRectangle1.setFill(false);&#xA;entityNameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintEntityNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintEntityNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalIndent = 0;&#xA;constraintEntityNameRectangle1.horizontalSpan = 1;&#xA;constraintEntityNameRectangle1.verticalSpan = 1;&#xA;constraintEntityNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintEntityNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(entityNameRectangle1, constraintEntityNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutEntityNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutEntityNameRectangle1.numColumns = 5;&#xA;&#x9;layoutEntityNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutEntityNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutEntityNameRectangle1.marginHeight = 0;&#xA;&#x9;entityNameRectangle1.setLayoutManager(layoutEntityNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setFont(FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityInheritanceFigure, constraintFFigureEntityProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityContainmentFigure.setFont(FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityContainmentFigure, constraintFFigureEntityProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityNameFigure.setFont(FFIGUREENTITYNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityNameFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityNameFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityNameFigure.verticalSpan = 4;&#xA;constraintFFigureEntityNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityNameFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityNameFigure, constraintFFigureEntityNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityPotencyLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityPotencyLabel.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityPotencyLabel.setFont(FFIGUREENTITYPOTENCYLABEL_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityPotencyLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityPotencyLabel.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityPotencyLabel.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityPotencyLabel.horizontalIndent = 0;&#xA;constraintFFigureEntityPotencyLabel.horizontalSpan = 1;&#xA;constraintFFigureEntityPotencyLabel.verticalSpan = 2;&#xA;constraintFFigureEntityPotencyLabel.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityPotencyLabel.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityPotencyLabel, constraintFFigureEntityPotencyLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityClassificationFigure.setFont(FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityClassificationFigure, constraintFFigureEntityProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityLevelFigure.setFont(FFIGUREENTITYLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityLevelFigure.verticalSpan = 2;&#xA;constraintFFigureEntityLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityLevelFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityLevelFigure, constraintFFigureEntityLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityAVSFigure.setFont(FFIGUREENTITYAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureEntityAVSFigure.verticalSpan = 1;&#xA;constraintFFigureEntityAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityAVSFigure.grabExcessVerticalSpace = false;&#xA;entityNameRectangle1.add(fFigureEntityAVSFigure, constraintFFigureEntityAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;de.itemis.gmf.runtime.layout.ResizableFlowLayout layoutFFigureContentCompartmentRectangle = new de.itemis.gmf.runtime.layout.ResizableFlowLayout();&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityNameFigure() {&#xA;&#x9;&#x9;return fFigureEntityNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityAVSFigure() {&#xA;&#x9;&#x9;return fFigureEntityAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityPotencyLabel() {&#xA;&#x9;&#x9;return fFigureEntityPotencyLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityLevelFigure() {&#xA;&#x9;&#x9;return fFigureEntityLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPOTENCYLABEL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.16">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5314"
          editPartClassName="WrappingLabel35EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel35ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.32"/>
      </labels>
      <labels
          visualID="5315"
          editPartClassName="WrappingLabel36EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel36ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityPotencyLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.33"/>
      </labels>
      <labels
          visualID="5316"
          editPartClassName="WrappingLabel37EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel37ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.34"/>
      </labels>
      <labels
          visualID="5317"
          editPartClassName="WrappingLabel38EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel38ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.35"/>
      </labels>
      <labels
          visualID="5318"
          editPartClassName="WrappingLabel39EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel39ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5319"
          editPartClassName="ConnectionNameExternalLabel2EditPart"
          itemSemanticEditPolicyClassName="ConnectionNameExternalLabel2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3125"
        editPartClassName="PackageEditPart"
        itemSemanticEditPolicyClassName="PackageItemSemanticEditPolicy"
        canonicalEditPolicyClassName="PackageCanonicalEditPolicy"
        compartments="//@diagram/@compartments.15"
        graphicalNodeEditPolicyClassName="PackageGraphicalNodeEditPolicy"
        createCommandClassName="PackageCreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="PackageEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="PackageFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class PackageFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePackageNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigurePackageContentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public PackageFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.melanee.core.modeleditor.custom.figures.BottomLessRectangleFigure nameRectangle0 = new org.melanee.core.modeleditor.custom.figures.BottomLessRectangleFigure();&#xA;&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigurePackageNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigurePackageNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigurePackageNameFigure.setFont(FFIGUREPACKAGENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePackageNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePackageNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePackageNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigurePackageNameFigure.horizontalIndent = 0;&#xA;constraintFFigurePackageNameFigure.horizontalSpan = 1;&#xA;constraintFFigurePackageNameFigure.verticalSpan = 1;&#xA;constraintFFigurePackageNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigurePackageNameFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigurePackageNameFigure, constraintFFigurePackageNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigurePackageContentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePackageContentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePackageContentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePackageContentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePackageContentRectangle.horizontalIndent = 0;&#xA;constraintFFigurePackageContentRectangle.horizontalSpan = 1;&#xA;constraintFFigurePackageContentRectangle.verticalSpan = 1;&#xA;constraintFFigurePackageContentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePackageContentRectangle.grabExcessVerticalSpace = true;&#xA;this.add(fFigurePackageContentRectangle, constraintFFigurePackageContentRectangle);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePackageNameFigure() {&#xA;&#x9;&#x9;return fFigurePackageNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigurePackageContentRectangle() {&#xA;&#x9;&#x9;return fFigurePackageContentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPACKAGENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.40">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5336"
          editPartClassName="PackageNameEditPart"
          itemSemanticEditPolicyClassName="PackageNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePackageNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3126"
        editPartClassName="Entity3EditPart"
        itemSemanticEditPolicyClassName="Entity3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Entity3CanonicalEditPolicy"
        compartments="//@diagram/@compartments.16 //@diagram/@compartments.17 //@diagram/@compartments.18"
        graphicalNodeEditPolicyClassName="Entity3GraphicalNodeEditPolicy"
        createCommandClassName="Entity3CreateCommand"
        containers="//@diagram/@compartments.15 //@diagram/@compartments.22">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.5/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityPotencyLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintInnerRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintInnerRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintInnerRectangle0.horizontalIndent = 0;&#xA;constraintInnerRectangle0.horizontalSpan = 1;&#xA;constraintInnerRectangle0.verticalSpan = 1;&#xA;constraintInnerRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintInnerRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(innerRectangle0, constraintInnerRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure entityNameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;entityNameRectangle1.setFill(false);&#xA;entityNameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintEntityNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintEntityNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintEntityNameRectangle1.horizontalIndent = 0;&#xA;constraintEntityNameRectangle1.horizontalSpan = 1;&#xA;constraintEntityNameRectangle1.verticalSpan = 1;&#xA;constraintEntityNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintEntityNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(entityNameRectangle1, constraintEntityNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutEntityNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutEntityNameRectangle1.numColumns = 5;&#xA;&#x9;layoutEntityNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutEntityNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutEntityNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutEntityNameRectangle1.marginHeight = 0;&#xA;&#x9;entityNameRectangle1.setLayoutManager(layoutEntityNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityInheritanceFigure.setFont(FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityInheritanceFigure, constraintFFigureEntityProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityContainmentFigure.setFont(FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityContainmentFigure, constraintFFigureEntityProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityNameFigure.setFont(FFIGUREENTITYNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityNameFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityNameFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityNameFigure.verticalSpan = 4;&#xA;constraintFFigureEntityNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityNameFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityNameFigure, constraintFFigureEntityNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityPotencyLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityPotencyLabel.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityPotencyLabel.setFont(FFIGUREENTITYPOTENCYLABEL_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityPotencyLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityPotencyLabel.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityPotencyLabel.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityPotencyLabel.horizontalIndent = 0;&#xA;constraintFFigureEntityPotencyLabel.horizontalSpan = 1;&#xA;constraintFFigureEntityPotencyLabel.verticalSpan = 2;&#xA;constraintFFigureEntityPotencyLabel.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityPotencyLabel.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityPotencyLabel, constraintFFigureEntityPotencyLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityProximityClassificationFigure.setFont(FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityProximityClassificationFigure, constraintFFigureEntityProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityLevelFigure.setFont(FFIGUREENTITYLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityLevelFigure.verticalSpan = 2;&#xA;constraintFFigureEntityLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityLevelFigure.grabExcessVerticalSpace = true;&#xA;entityNameRectangle1.add(fFigureEntityLevelFigure, constraintFFigureEntityLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureEntityAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityAVSFigure.setFont(FFIGUREENTITYAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureEntityAVSFigure.verticalSpan = 1;&#xA;constraintFFigureEntityAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureEntityAVSFigure.grabExcessVerticalSpace = false;&#xA;entityNameRectangle1.add(fFigureEntityAVSFigure, constraintFFigureEntityAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;de.itemis.gmf.runtime.layout.ResizableFlowLayout layoutFFigureContentCompartmentRectangle = new de.itemis.gmf.runtime.layout.ResizableFlowLayout();&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityNameFigure() {&#xA;&#x9;&#x9;return fFigureEntityNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityAVSFigure() {&#xA;&#x9;&#x9;return fFigureEntityAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityPotencyLabel() {&#xA;&#x9;&#x9;return fFigureEntityPotencyLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityLevelFigure() {&#xA;&#x9;&#x9;return fFigureEntityLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureEntityProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPOTENCYLABEL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.16">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5337"
          editPartClassName="WrappingLabel40EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel40ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.36"/>
      </labels>
      <labels
          visualID="5338"
          editPartClassName="WrappingLabel41EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel41ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityPotencyLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.37"/>
      </labels>
      <labels
          visualID="5339"
          editPartClassName="WrappingLabel42EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel42ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.38"/>
      </labels>
      <labels
          visualID="5340"
          editPartClassName="WrappingLabel43EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel43ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.39"/>
      </labels>
      <labels
          visualID="5341"
          editPartClassName="WrappingLabel44EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel44ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5342"
          editPartClassName="ConnectionNameExternalLabel3EditPart"
          itemSemanticEditPolicyClassName="ConnectionNameExternalLabel3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:DesignLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3127"
        editPartClassName="Connection3EditPart"
        itemSemanticEditPolicyClassName="Connection3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Connection3CanonicalEditPolicy"
        compartments="//@diagram/@compartments.19 //@diagram/@compartments.20 //@diagram/@compartments.21"
        graphicalNodeEditPolicyClassName="Connection3GraphicalNodeEditPolicy"
        createCommandClassName="Connection3CreateCommand"
        containers="//@diagram/@compartments.15 //@diagram/@compartments.22">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.2/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="ConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityInheritanceFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityContainmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionProximityClassificationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAttributesCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureMethodsCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureContentCompartmentRectangle; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVisualizerCompartmentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(42)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 1;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 0;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintNameRectangle1 = new org.eclipse.draw2d.GridData();&#xA;constraintNameRectangle1.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintNameRectangle1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintNameRectangle1.horizontalIndent = 0;&#xA;constraintNameRectangle1.horizontalSpan = 1;&#xA;constraintNameRectangle1.verticalSpan = 1;&#xA;constraintNameRectangle1.grabExcessHorizontalSpace = true;&#xA;constraintNameRectangle1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(nameRectangle1, constraintNameRectangle1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 5;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutNameRectangle1.marginHeight = 3;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityInheritanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityInheritanceFigure.setFont(FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityInheritanceFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityInheritanceFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityInheritanceFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityInheritanceFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityInheritanceFigure, constraintFFigureConnectionProximityInheritanceFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityContainmentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityContainmentFigure.setFont(FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityContainmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityContainmentFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityContainmentFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionProximityContainmentFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityContainmentFigure, constraintFFigureConnectionProximityContainmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionNameFigure.setFont(FFIGURECONNECTIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureConnectionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionNameFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionNameFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionNameFigure, constraintFFigureConnectionNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionPotencyFigure.setFont(FFIGURECONNECTIONPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionPotencyFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionPotencyFigure, constraintFFigureConnectionPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionProximityClassificationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionProximityClassificationFigure.setFont(FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionProximityClassificationFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionProximityClassificationFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionProximityClassificationFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionProximityClassificationFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionProximityClassificationFigure, constraintFFigureConnectionProximityClassificationFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionLevelFigure.setFont(FFIGURECONNECTIONLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionLevelFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionLevelFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionLevelFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionLevelFigure, constraintFFigureConnectionLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionAVSFigure.setFont(FFIGURECONNECTIONAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionAVSFigure.horizontalSpan = 5;&#xA;constraintFFigureConnectionAVSFigure.verticalSpan = 1;&#xA;constraintFFigureConnectionAVSFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureConnectionAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureConnectionAVSFigure, constraintFFigureConnectionAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureAttributesCompartmentRectangle.setFill(false);&#xA;fFigureAttributesCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureAttributesCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributesCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureAttributesCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributesCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureAttributesCompartmentRectangle, constraintFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureAttributesCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureAttributesCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureAttributesCompartmentRectangle.setLayoutManager(layoutFFigureAttributesCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureMethodsCompartmentRectangle.setFill(false);&#xA;fFigureMethodsCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureMethodsCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodsCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureMethodsCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMethodsCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodsCompartmentRectangle, constraintFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureMethodsCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureMethodsCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureMethodsCompartmentRectangle.setLayoutManager(layoutFFigureMethodsCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureContentCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureContentCompartmentRectangle.setFill(false);&#xA;fFigureContentCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureContentCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureContentCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureContentCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureContentCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureContentCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureContentCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureContentCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureContentCompartmentRectangle, constraintFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureContentCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureContentCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureContentCompartmentRectangle.setLayoutManager(layoutFFigureContentCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setFill(false);&#xA;fFigureVisualizerCompartmentRectangle.setOutline(false);&#xA;&#xA;fFigureVisualizerCompartmentRectangle.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalIndent = 0;&#xA;constraintFFigureVisualizerCompartmentRectangle.horizontalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.verticalSpan = 1;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigureVisualizerCompartmentRectangle.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureVisualizerCompartmentRectangle, constraintFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureVisualizerCompartmentRectangle = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setSpacing(0);&#xA;&#x9;layoutFFigureVisualizerCompartmentRectangle.setVertical(true);&#xA;&#xA;&#x9;fFigureVisualizerCompartmentRectangle.setLayoutManager(layoutFFigureVisualizerCompartmentRectangle);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityInheritanceFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityInheritanceFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityContainmentFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityContainmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionProximityClassificationFigure() {&#xA;&#x9;&#x9;return fFigureConnectionProximityClassificationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionPotencyFigure() {&#xA;&#x9;&#x9;return fFigureConnectionPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionLevelFigure() {&#xA;&#x9;&#x9;return fFigureConnectionLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionAVSFigure() {&#xA;&#x9;&#x9;return fFigureConnectionAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAttributesCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureAttributesCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureMethodsCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureMethodsCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureContentCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureContentCompartmentRectangle;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVisualizerCompartmentRectangle() {&#xA;&#x9;&#x9;return fFigureVisualizerCompartmentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYINHERITANCEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCONTAINMENTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPROXIMITYCLASSIFICATIONFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.3">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5343"
          editPartClassName="WrappingLabel45EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel45ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.40"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5344"
          editPartClassName="ConnectionName3EditPart"
          itemSemanticEditPolicyClassName="ConnectionName3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5345"
          editPartClassName="WrappingLabel46EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel46ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.41"/>
      </labels>
      <labels
          visualID="5346"
          editPartClassName="WrappingLabel47EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel47ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.42"/>
      </labels>
      <labels
          visualID="5347"
          editPartClassName="WrappingLabel48EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel48ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.43"/>
      </labels>
      <labels
          visualID="5348"
          editPartClassName="WrappingLabel49EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel49ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionProximityClassificationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.44"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3128"
        editPartClassName="Inheritance3EditPart"
        itemSemanticEditPolicyClassName="Inheritance3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Inheritance3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Inheritance3GraphicalNodeEditPolicy"
        createCommandClassName="Inheritance3CreateCommand"
        containers="//@diagram/@compartments.15 //@diagram/@compartments.22">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.9/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="GeneralizationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralisationSubtitleFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationNameFigure.setFont(FFIGUREGENERALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureGeneralisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureGeneralisationNameFigure, constraintFFigureGeneralisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureGeneralisationSubtitleFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setFont(FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureGeneralisationSubtitleFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureGeneralisationSubtitleFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalIndent = 0;&#xA;constraintFFigureGeneralisationSubtitleFigure.horizontalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.verticalSpan = 1;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureGeneralisationSubtitleFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureGeneralisationSubtitleFigure, constraintFFigureGeneralisationSubtitleFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationNameFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralisationSubtitleFigure() {&#xA;&#x9;&#x9;return fFigureGeneralisationSubtitleFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREGENERALISATIONSUBTITLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.29">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5349"
          editPartClassName="InheritanceName5EditPart"
          itemSemanticEditPolicyClassName="InheritanceName5ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5350"
          editPartClassName="InheritanceName6EditPart"
          itemSemanticEditPolicyClassName="InheritanceName6ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="GeneralizationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class GeneralizationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureGeneralizationNameExternalFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public GeneralizationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureGeneralizationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureGeneralizationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5351"
          editPartClassName="WrappingLabel50EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel50ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureGeneralisationSubtitleFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.45"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3129"
        editPartClassName="Package2EditPart"
        itemSemanticEditPolicyClassName="Package2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Package2CanonicalEditPolicy"
        compartments="//@diagram/@compartments.22"
        graphicalNodeEditPolicyClassName="Package2GraphicalNodeEditPolicy"
        createCommandClassName="Package2CreateCommand"
        containers="//@diagram/@compartments.22 //@diagram/@compartments.15">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.12/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="PackageFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class PackageFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePackageNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigurePackageContentRectangle; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public PackageFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.melanee.core.modeleditor.custom.figures.BottomLessRectangleFigure nameRectangle0 = new org.melanee.core.modeleditor.custom.figures.BottomLessRectangleFigure();&#xA;&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigurePackageNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigurePackageNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigurePackageNameFigure.setFont(FFIGUREPACKAGENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePackageNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePackageNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePackageNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigurePackageNameFigure.horizontalIndent = 0;&#xA;constraintFFigurePackageNameFigure.horizontalSpan = 1;&#xA;constraintFFigurePackageNameFigure.verticalSpan = 1;&#xA;constraintFFigurePackageNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigurePackageNameFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigurePackageNameFigure, constraintFFigurePackageNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigurePackageContentRectangle = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePackageContentRectangle = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePackageContentRectangle.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePackageContentRectangle.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePackageContentRectangle.horizontalIndent = 0;&#xA;constraintFFigurePackageContentRectangle.horizontalSpan = 1;&#xA;constraintFFigurePackageContentRectangle.verticalSpan = 1;&#xA;constraintFFigurePackageContentRectangle.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePackageContentRectangle.grabExcessVerticalSpace = true;&#xA;this.add(fFigurePackageContentRectangle, constraintFFigurePackageContentRectangle);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePackageNameFigure() {&#xA;&#x9;&#x9;return fFigurePackageNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigurePackageContentRectangle() {&#xA;&#x9;&#x9;return fFigurePackageContentRectangle;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPACKAGENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Package/content"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.40">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5352"
          editPartClassName="PackageName2EditPart"
          itemSemanticEditPolicyClassName="PackageName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePackageNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2005"
        editPartClassName="DeepModelEditPart"
        itemSemanticEditPolicyClassName="DeepModelItemSemanticEditPolicy"
        canonicalEditPolicyClassName="DeepModelCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0 //@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="DeepModelGraphicalNodeEditPolicy"
        createCommandClassName="DeepModelCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="DeepModelEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="DeepModelFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class DeepModelFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDeepModelNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDeepModelAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureDeepModelEnumerations; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureDeepModelLevelContainer; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDeepModelComplianceWarning; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public DeepModelFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(500)&#xA;, getMapMode().DPtoLP(350)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameArea0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;nameArea0.setFill(false);&#xA;nameArea0.setOutline(false);&#xA;nameArea0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#xA;this.add(nameArea0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameArea0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameArea0.numColumns = 1;&#xA;&#x9;layoutNameArea0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameArea0.horizontalSpacing = 0;&#xA;&#x9;layoutNameArea0.verticalSpacing = 0;&#xA;&#x9;layoutNameArea0.marginWidth = 3;&#xA;&#x9;layoutNameArea0.marginHeight = 0;&#xA;&#x9;nameArea0.setLayoutManager(layoutNameArea0);&#xA;&#xA;&#xA;&#xA;fFigureDeepModelComplianceWarning = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureDeepModelComplianceWarning.setText(&quot;&quot;);&#xA;&#xA;fFigureDeepModelComplianceWarning.setFont(FFIGUREDEEPMODELCOMPLIANCEWARNING_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDeepModelComplianceWarning = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDeepModelComplianceWarning.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelComplianceWarning.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureDeepModelComplianceWarning.horizontalIndent = 0;&#xA;constraintFFigureDeepModelComplianceWarning.horizontalSpan = 1;&#xA;constraintFFigureDeepModelComplianceWarning.verticalSpan = 1;&#xA;constraintFFigureDeepModelComplianceWarning.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDeepModelComplianceWarning.grabExcessVerticalSpace = true;&#xA;nameArea0.add(fFigureDeepModelComplianceWarning, constraintFFigureDeepModelComplianceWarning);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDeepModelNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureDeepModelNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureDeepModelNameFigure.setFont(FFIGUREDEEPMODELNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDeepModelNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDeepModelNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelNameFigure.horizontalIndent = 0;&#xA;constraintFFigureDeepModelNameFigure.horizontalSpan = 1;&#xA;constraintFFigureDeepModelNameFigure.verticalSpan = 1;&#xA;constraintFFigureDeepModelNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDeepModelNameFigure.grabExcessVerticalSpace = true;&#xA;nameArea0.add(fFigureDeepModelNameFigure, constraintFFigureDeepModelNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDeepModelAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureDeepModelAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureDeepModelAVSFigure.setFont(FFIGUREDEEPMODELAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDeepModelAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDeepModelAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDeepModelAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureDeepModelAVSFigure.horizontalSpan = 1;&#xA;constraintFFigureDeepModelAVSFigure.verticalSpan = 1;&#xA;constraintFFigureDeepModelAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDeepModelAVSFigure.grabExcessVerticalSpace = true;&#xA;nameArea0.add(fFigureDeepModelAVSFigure, constraintFFigureDeepModelAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDeepModelEnumerations = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureDeepModelEnumerations.setFill(false);&#xA;fFigureDeepModelEnumerations.setOutline(false);&#xA;&#xA;fFigureDeepModelEnumerations.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;fFigureDeepModelEnumerations.setBorder(createBorder0());&#xA;&#xA;this.add(fFigureDeepModelEnumerations);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureDeepModelEnumerations = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureDeepModelEnumerations.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureDeepModelEnumerations.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutFFigureDeepModelEnumerations.setSpacing(0);&#xA;&#x9;layoutFFigureDeepModelEnumerations.setVertical(true);&#xA;&#xA;&#x9;fFigureDeepModelEnumerations.setLayoutManager(layoutFFigureDeepModelEnumerations);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDeepModelLevelContainer = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureDeepModelLevelContainer.setFill(false);&#xA;fFigureDeepModelLevelContainer.setOutline(false);&#xA;fFigureDeepModelLevelContainer.setBorder(createBorder1());&#xA;&#xA;this.add(fFigureDeepModelLevelContainer);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutFFigureDeepModelLevelContainer = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutFFigureDeepModelLevelContainer.setStretchMinorAxis(true);&#xA;&#x9;layoutFFigureDeepModelLevelContainer.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutFFigureDeepModelLevelContainer.setSpacing(0);&#xA;&#x9;layoutFFigureDeepModelLevelContainer.setVertical(true);&#xA;&#xA;&#x9;fFigureDeepModelLevelContainer.setLayoutManager(layoutFFigureDeepModelLevelContainer);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;org.melanee.core.modeleditor.custom.borders.CustomBorder result = new org.melanee.core.modeleditor.custom.borders.CustomBorder();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder1() {&#xA;&#x9;&#x9;org.melanee.core.modeleditor.custom.borders.CustomBorder result = new org.melanee.core.modeleditor.custom.borders.CustomBorder();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDeepModelNameFigure() {&#xA;&#x9;&#x9;return fFigureDeepModelNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDeepModelAVSFigure() {&#xA;&#x9;&#x9;return fFigureDeepModelAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureDeepModelEnumerations() {&#xA;&#x9;&#x9;return fFigureDeepModelEnumerations;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureDeepModelLevelContainer() {&#xA;&#x9;&#x9;return fFigureDeepModelLevelContainer;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDeepModelComplianceWarning() {&#xA;&#x9;&#x9;return fFigureDeepModelComplianceWarning;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDEEPMODELCOMPLIANCEWARNING_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 12, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDEEPMODELNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDEEPMODELAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="500"
            height="350"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:GenVisualEffect"
          key="org.melanee.core.models.plm.PLM.diagram.edit.policies.EnumerationsVisiblePin2005Policy.KEY"
          editPolicyQualifiedClassName="org.melanee.core.models.plm.PLM.diagram.edit.policies.EnumerationsVisiblePin2005Policy"
          name="EnumerationsVisiblePin"
          pinKind="VisiblePin"
          operationName="getFigureDeepModelEnumerations().setVisible"
          operationType="Boolean"
          oclExpression="self.enumeration->size() > 0"/>
      <modelFacet>
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Domain/deepModel"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Domain/deepModel"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/visualizer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.0">
                <feature
                    href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/LMLVisualizer/attributes"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5331"
          editPartClassName="DeepModelNameEditPart"
          itemSemanticEditPolicyClassName="DeepModelNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDeepModelNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5332"
          editPartClassName="WrappingLabelEditPart"
          itemSemanticEditPolicyClassName="WrappingLabelItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDeepModelComplianceWarning"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.47"/>
      </labels>
      <labels
          visualID="5353"
          editPartClassName="WrappingLabel2EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel2ItemSemanticEditPolicy"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDeepModelAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.48"/>
      </labels>
    </topLevelNodes>
    <links
        visualID="4026"
        editPartClassName="ClassificationEditPart"
        itemSemanticEditPolicyClassName="ClassificationItemSemanticEditPolicy"
        createCommandClassName="ClassificationCreateCommand"
        reorientCommandClassName="ClassificationReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ClassificationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ClassificationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ClassificationFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureClassificationTypeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureClassificationBlueprintNameFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ClassificationFigure() {&#xA;&#x9;&#x9;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureClassificationTypeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureClassificationTypeNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureClassificationTypeNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureClassificationTypeNameFigure.setFont(FFIGURECLASSIFICATIONTYPENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureClassificationTypeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureClassificationBlueprintNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureClassificationBlueprintNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureClassificationBlueprintNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureClassificationBlueprintNameFigure.setFont(FFIGURECLASSIFICATIONBLUEPRINTNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureClassificationBlueprintNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureClassificationTypeNameFigure() {&#xA;&#x9;&#x9;return fFigureClassificationTypeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureClassificationBlueprintNameFigure() {&#xA;&#x9;&#x9;return fFigureClassificationBlueprintNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECLASSIFICATIONTYPENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECLASSIFICATIONBLUEPRINTNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Classification"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level/content"/>
        <sourceMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Classification/instance"/>
        <targetMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Classification/type"/>
      </modelFacet>
      <labels
          visualID="6016"
          editPartClassName="WrappingLabel51EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel51ItemSemanticEditPolicy"
          readOnly="true"
          alignment="SOURCE">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureClassificationBlueprintNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              x="10"
              y="10"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.49"/>
      </labels>
      <labels
          visualID="6017"
          editPartClassName="WrappingLabel52EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel52ItemSemanticEditPolicy"
          readOnly="true"
          alignment="TARGET">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureClassificationTypeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              x="10"
              y="10"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.50"/>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.46"/>
    </links>
    <links
        visualID="4034"
        editPartClassName="SupertypeEditPart"
        itemSemanticEditPolicyClassName="SupertypeItemSemanticEditPolicy"
        createCommandClassName="SupertypeCreateCommand"
        reorientCommandClassName="SupertypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="SupertypeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SuperTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SuperTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SuperTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Supertype"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance/supertype"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance/supertype"/>
        <sourceMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Supertype/inheritance"/>
        <targetMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Supertype/supertype"/>
      </modelFacet>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.47"/>
    </links>
    <links
        visualID="4035"
        editPartClassName="SubtypeEditPart"
        itemSemanticEditPolicyClassName="SubtypeItemSemanticEditPolicy"
        createCommandClassName="SubtypeCreateCommand"
        reorientCommandClassName="SubtypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="SubtypeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Subtype"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance/subtype"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance/subtype"/>
        <sourceMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Subtype/inheritance"/>
        <targetMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Subtype/subtype"/>
      </modelFacet>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.48"/>
    </links>
    <links
        visualID="4036"
        editPartClassName="ConnectionEndEditPart"
        itemSemanticEditPolicyClassName="ConnectionEndItemSemanticEditPolicy"
        incomingCreationAllowed="true"
        createCommandClassName="ConnectionEndCreateCommand"
        reorientCommandClassName="ConnectionEndReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ConnectionEndEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ConnectionParticipationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionParticipationFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionParticipationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionParticipationMultiplicityFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionParticipationFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureConnectionParticipationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionParticipationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureConnectionParticipationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureConnectionParticipationNameFigure.setFont(FFIGURECONNECTIONPARTICIPATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureConnectionParticipationNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureConnectionParticipationMultiplicityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureConnectionParticipationMultiplicityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionParticipationMultiplicityFigure.setFont(FFIGURECONNECTIONPARTICIPATIONMULTIPLICITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureConnectionParticipationMultiplicityFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionParticipationNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionParticipationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionParticipationMultiplicityFigure() {&#xA;&#x9;&#x9;return fFigureConnectionParticipationMultiplicityFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPARTICIPATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPARTICIPATIONMULTIPLICITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/ConnectionEnd"/>
        <containmentMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection/connectionEnd"/>
        <childMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection/connectionEnd"/>
        <sourceMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/ConnectionEnd/connection"/>
        <targetMetaFeature
            href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/ConnectionEnd/destination"/>
      </modelFacet>
      <labels
          visualID="6024"
          editPartClassName="WrappingLabel53EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel53ItemSemanticEditPolicy"
          readOnly="true"
          alignment="SOURCE">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionParticipationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              x="-10"
              y="-10"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.51"/>
      </labels>
      <labels
          visualID="6025"
          editPartClassName="WrappingLabel54EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel54ItemSemanticEditPolicy"
          readOnly="true"
          alignment="SOURCE">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionParticipationMultiplicityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              x="10"
              y="10"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.52"/>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.51"/>
    </links>
    <compartments
        visualID="7061"
        editPartClassName="DeepModelDeepModelEnumerationCompartmentEditPart"
        itemSemanticEditPolicyClassName="DeepModelDeepModelEnumerationCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="DeepModelDeepModelEnumerationCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="DeepModelEnumerationCompartment"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureDeepModelEnumerations"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7062"
        editPartClassName="DeepModelDeepModelLevelCompartmentEditPart"
        itemSemanticEditPolicyClassName="DeepModelDeepModelLevelCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="DeepModelDeepModelLevelCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1"
        title="DeepModelLevelCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureDeepModelLevelContainer"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7046"
        editPartClassName="LevelDomainElementsCompartmentEditPart"
        itemSemanticEditPolicyClassName="LevelDomainElementsCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="LevelDomainElementsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2 //@diagram/@childNodes.10 //@diagram/@childNodes.11 //@diagram/@childNodes.12"
        title="DomainElementsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.1"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureDomainElementsContainer"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7047"
        editPartClassName="ConnectionConnectionAttributesCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionAttributesCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionAttributesCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="ConnectionAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7048"
        editPartClassName="ConnectionConnectionMethodsCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionMethodsCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionMethodsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        title="ConnectionMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7049"
        editPartClassName="ConnectionConnectionContentsCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionContentsCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionContentsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="ConnectionContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7051"
        editPartClassName="EntityEntityAttributesCompartmentEditPart"
        itemSemanticEditPolicyClassName="EntityEntityAttributesCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityAttributesCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.6"
        title="EntityAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.5">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7052"
        editPartClassName="EntityEntityMethodsCompartmentEditPart"
        itemSemanticEditPolicyClassName="EntityEntityMethodsCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityMethodsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.7"
        title="EntityMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.5">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7053"
        editPartClassName="EntityEntityContentsCompartmentEditPart"
        itemSemanticEditPolicyClassName="EntityEntityContentsCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityContentsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="EntityContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.5"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7054"
        editPartClassName="ConnectionConnectionAttributesCompartment2EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionAttributesCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionAttributesCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="ConnectionAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.8">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7055"
        editPartClassName="ConnectionConnectionMethodsCompartment2EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionMethodsCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionMethodsCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        title="ConnectionMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.8">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7056"
        editPartClassName="ConnectionConnectionContentsCompartment2EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionContentsCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionContentsCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="ConnectionContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.8"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7058"
        editPartClassName="EntityEntityAttributesCompartment2EditPart"
        itemSemanticEditPolicyClassName="EntityEntityAttributesCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityAttributesCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.6"
        title="EntityAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.11">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7059"
        editPartClassName="EntityEntityMethodsCompartment2EditPart"
        itemSemanticEditPolicyClassName="EntityEntityMethodsCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityMethodsCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.7"
        title="EntityMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.11">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7060"
        editPartClassName="EntityEntityContentsCompartment2EditPart"
        itemSemanticEditPolicyClassName="EntityEntityContentsCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityContentsCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="EntityContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.11"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7063"
        editPartClassName="PackagePackageContentCompartmentEditPart"
        itemSemanticEditPolicyClassName="PackagePackageContentCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="PackagePackageContentCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.13 //@diagram/@childNodes.14 //@diagram/@childNodes.15 //@diagram/@childNodes.16"
        title="PackageContentCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.12"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigurePackageContentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7064"
        editPartClassName="EntityEntityAttributesCompartment3EditPart"
        itemSemanticEditPolicyClassName="EntityEntityAttributesCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityAttributesCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.6"
        title="EntityAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.13">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7065"
        editPartClassName="EntityEntityMethodsCompartment3EditPart"
        itemSemanticEditPolicyClassName="EntityEntityMethodsCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityMethodsCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.7"
        title="EntityMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.13">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7066"
        editPartClassName="EntityEntityContentsCompartment3EditPart"
        itemSemanticEditPolicyClassName="EntityEntityContentsCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="EntityEntityContentsCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="EntityContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.13"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7067"
        editPartClassName="ConnectionConnectionAttributesCompartment3EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionAttributesCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionAttributesCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="ConnectionAttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.14">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAttributesCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7068"
        editPartClassName="ConnectionConnectionMethodsCompartment3EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionMethodsCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionMethodsCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        title="ConnectionMethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.14">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureMethodsCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7069"
        editPartClassName="ConnectionConnectionContentsCompartment3EditPart"
        itemSemanticEditPolicyClassName="ConnectionConnectionContentsCompartment3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConnectionConnectionContentsCompartment3CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.8 //@diagram/@childNodes.9"
        title="ConnectionContentsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.14"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureContentCompartmentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7070"
        editPartClassName="PackagePackageContentCompartment2EditPart"
        itemSemanticEditPolicyClassName="PackagePackageContentCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="PackagePackageContentCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.13 //@diagram/@childNodes.14 //@diagram/@childNodes.15 //@diagram/@childNodes.16"
        title="PackageContentCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.16"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigurePackageContentRectangle"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <palette>
      <groups
          title="DeepModel Definition"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Deep Model"
            description="Creates a new Deep Model"
            largeIconPath="/org.melanee.core.models.gmf/icons/ontology16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/ontology16.gif"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Level"
            description="Creates a new Level"
            largeIconPath="/org.melanee.core.models.gmf/icons/model16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/model16.gif"
            genNodes="//@diagram/@childNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Enumeration"
            description="Creates a new Enumeration"
            largeIconPath="/org.melanee.core.models.gmf/icons/enumeration16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/enumeration16.gif"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Package"
            description="Creates a new Package"
            genNodes="//@diagram/@childNodes.12 //@diagram/@childNodes.16"/>
      </groups>
      <groups
          title="Domain Definition"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Entity"
            description="Creates a new Entity"
            largeIconPath="/org.melanee.core.models.gmf/icons/clabject16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/clabject16.gif"
            genNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.11 //@diagram/@childNodes.13"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Connection / Role"
            description="Creates a new Connection when dragged between two Entities. When dragged from a connection the user is queried whether to create a Role or Connection."
            largeIconPath="/org.melanee.core.models.gmf/icons/connection16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/connection16.gif"
            genLinks="//@diagram/@links.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Attribute"
            description="Creates a new Attribute."
            largeIconPath="/org.melanee.core.models.gmf/icons/field16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/field16.gif"
            genNodes="//@diagram/@childNodes.3 //@diagram/@childNodes.6"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Method"
            description="Creates a new Method."
            largeIconPath="/org.melanee.core.models.gmf/icons/method16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/method16.gif"
            genNodes="//@diagram/@childNodes.4 //@diagram/@childNodes.7"/>
      </groups>
      <groups
          title="Correlation Definition"
          stack="true"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Classification"
            description="Creates a new Classification"
            largeIconPath="/org.melanee.core.models.gmf/icons/classification16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/classification16.gif"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Inheritance"
            description="Create a new Generalisation"
            largeIconPath="/org.melanee.core.models.gmf/icons/inheritance16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/inheritance16.gif"
            genNodes="//@diagram/@childNodes.9 //@diagram/@childNodes.10 //@diagram/@childNodes.15"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Super-/Subtype"
            description="Create a new Supertype or Subtype"
            largeIconPath="/org.melanee.core.models.gmf/icons/superType16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/superType16.gif"
            genLinks="//@diagram/@links.1 //@diagram/@links.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Complement"
            description="Creates a new Complement"
            largeIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Equal"
            description="Creates a new Equal"
            largeIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Inversion"
            description="Creates a new Inversion"
            largeIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"
            smallIconPath="/org.melanee.core.models.gmf/icons/setRelationship16.gif"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="org.melanee.core.modeleditor.general"
        name="Melanee">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.melanee.core.models.plm.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.melanee.core.models.plm.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.melanee.core.models.plm.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.melanee.core.models.plm.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      iD="org.melanee.core.modeleditor"
      name="Melanee - Multi-levEl modeLing And oNtology Engineering Environment Plugin"
      provider="University of Mannheim: Chair for Software Engineering"
      version="2.0.0.qualifier"
      printingEnabled="true">
    <requiredPlugins>org.eclipse.gmf.tooling.runtime</requiredPlugins>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
    <requiredPlugins>de.itemis.gmf.runtime.extensions</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.diagram.ui.actions</requiredPlugins>
    <requiredPlugins>org.melanee.core.models.gmf</requiredPlugins>
    <requiredPlugins>org.melanee.core.workbench</requiredPlugins>
    <requiredPlugins>org.melanee.core.common</requiredPlugins>
    <requiredPlugins>org.melanee.core.models.links</requiredPlugins>
    <requiredPlugins>org.melanee.core.modelexplorer</requiredPlugins>
    <requiredPlugins>org.melanee.core.emendation.service</requiredPlugins>
    <requiredPlugins>org.melanee.core.dsl.service</requiredPlugins>
  </plugin>
  <editor
      iconPath="icons/melanee16.gif"/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@childNodes.10"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@childNodes.11"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.12"
        child="//@diagram/@childNodes.13"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@childNodes.12"
        child="//@diagram/@childNodes.14"/>
    <childReferences
        parent="//@diagram/@childNodes.12"
        child="//@diagram/@childNodes.15"/>
    <childReferences
        parent="//@diagram/@childNodes.16"
        child="//@diagram/@childNodes.13"/>
    <childReferences
        parent="//@diagram/@childNodes.16"
        child="//@diagram/@childNodes.14"/>
    <childReferences
        parent="//@diagram/@childNodes.16"
        child="//@diagram/@childNodes.15"/>
    <childReferences
        parent="//@diagram/@childNodes.16"
        child="//@diagram/@childNodes.16"/>
    <childReferences
        parent="//@diagram/@childNodes.12"
        child="//@diagram/@childNodes.16"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@childNodes.12"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.13"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.14"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.8"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.11"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.13"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.14"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.1"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.13"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.14"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.9"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.9"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.10"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.10"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.15"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.15"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.2"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.13"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.14"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.9"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.9"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.10"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.10"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.15"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.15"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.3"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.13"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.13"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.14"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.8"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.14"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Linguistic">
      <filter
          xsi:type="gmfgen:CustomTabFilter"
          className="org.melanee.core.modeleditor.custom.propertysheet.LinguisticPropertiesSectionFilter"/>
    </tabs>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="visualization"
        label="Visualization"
        className="org.melanee.core.modeleditor.custom.propertysheet.VisualizationPropertySectionAbstractPropertySection"
        generateBoilerplate="false">
      <filter
          xsi:type="gmfgen:CustomTabFilter"
          className="org.melanee.core.modeleditor.custom.propertysheet.VisualizationPropertiesSectionFilter"/>
    </tabs>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="constraints"
        label="Constraints"
        className="org.melanee.core.modeleditor.custom.propertysheet.ConstraintPropertySectionAbstractPropertySection"
        generateBoilerplate="false">
      <filter
          xsi:type="gmfgen:CustomTabFilter"
          className="org.melanee.core.modeleditor.custom.propertysheet.ConstraintPropertiesSectionFilter"/>
    </tabs>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="ontological"
        label="Ontological"
        className="org.melanee.core.modeleditor.custom.propertysheet.OntologicalPropertySectionAbstractPropertySection"
        generateBoilerplate="false">
      <filter
          xsi:type="gmfgen:CustomTabFilter"
          className="org.melanee.core.modeleditor.custom.propertysheet.OntologicalPropertiesSectionFilter"/>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../../org.melanee.core.models.plm/model/PLM.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="let index:Integer = &#xD;&#xA;&#x9;self.getDeepModel().content->indexOf(self) - 1&#xD;&#xA;in&#xD;&#xA;let indexAsString:String = if (index > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(index.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (index = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#x9;'O'.concat(indexAsString)"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'durability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.durability&#xD;&#xA;endif"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'mutability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.durability&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.mutability&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('durability') = 'default') and (self.durability &lt;> self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = &#xD;&#xA;&#x9;self.getDurabilityAsString()&#xD;&#xA;in&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="if (self.datatype.oclIsUndefined() or self.datatype = '') then&#xD;&#xA;&#x9;''&#xD;&#xA;else&#xD;&#xA;&#x9;':'.concat(self.datatype)&#xD;&#xA;endif"/>
      <expressions
          body="if (not self.value.oclIsUndefined() and self.value &lt;> '') then&#xD;&#xA;&#x9;'='.concat(self.value)&#xD;&#xA;else &#xD;&#xA;&#x9;if (self.mutability &lt;> self.durability) then&#xD;&#xA;&#x9;&#x9;'='&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderValueVariability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('mutability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('mutability') = 'default') and (self.mutability &lt;> self.durability)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let mutability:String =&#xD;&#xA;&#x9;self.getMutabilityAsString()&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderValueVariability) then&#xD;&#xA;&#x9;mutability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'durability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.durability&#xD;&#xA;endif"/>
      <expressions
          body="let input:OrderedSet(Parameter) = self.getInput()&#xD;&#xA;in&#xD;&#xA;'('.concat(Sequence{1..input->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> input->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;).concat(')')"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('durability') = 'default') and (self.durability &lt;>self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = &#xD;&#xA;&#x9;self.getDurabilityAsString()&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let output:OrderedSet(Parameter) = self.getInput()&#xD;&#xA;in&#xD;&#xA;if (output->size() > 0) then&#xD;&#xA;&#x9;':'.concat(Sequence{1..output->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;       &#x9;     &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;&#x9;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;&#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;&#x9;in&#xD;&#xA;       &#x9;         &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;&#x9;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;              &#x9;  &#x9;&#x9;endif&#xD;&#xA;       &#x9; &#x9;)&#xD;&#xA;&#x9;&#x9;in&#xD;&#xA;&#x9;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(output->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(output->at(i).name)&#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;)&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'durability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.durability&#xD;&#xA;endif"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'mutability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.durability&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.mutability&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('durability') = 'default') and (self.durability &lt;> self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = &#xD;&#xA;&#x9;self.getDurabilityAsString()&#xD;&#xA;in&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="if (self.datatype.oclIsUndefined() or self.datatype = '') then&#xD;&#xA;&#x9;''&#xD;&#xA;else&#xD;&#xA;&#x9;':'.concat(self.datatype)&#xD;&#xA;endif"/>
      <expressions
          body="if (not self.value.oclIsUndefined() and self.value &lt;> '') then&#xD;&#xA;&#x9;'='.concat(self.value)&#xD;&#xA;else &#xD;&#xA;&#x9;if (self.mutability &lt;> self.durability) then&#xD;&#xA;&#x9;&#x9;'='&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderValueVariability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('mutability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('mutability') = 'default') and (self.mutability &lt;> self.durability)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let mutability:String = &#xD;&#xA;&#x9;self.getMutabilityAsString()&#xD;&#xA;in&#xD;&#xA;if (renderValueVariability) then&#xD;&#xA;&#x9;mutability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="-- This is needed to prevent setting a if one was already set at creation of the semantic model element&#xD;&#xA;-- This can happen when changing values through the refactoring service during creation&#xD;&#xA;let attribute : ecore::EAttribute =&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eClass().eAllAttributes->select(a | a.name = 'durability')->first().oclAsType(ecore::EAttribute)&#xD;&#xA;in&#xD;&#xA;let isSet:Boolean = &#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eIsSet(attribute)&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not isSet) then&#xD;&#xA;&#x9;self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency&#xD;&#xA;-- If set use the old value&#xD;&#xA;else&#xD;&#xA;&#x9;self.durability&#xD;&#xA;endif"/>
      <expressions
          body="let input:OrderedSet(Parameter) = self.getInput()&#xD;&#xA;in&#xD;&#xA;'('.concat(Sequence{1..input->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> input->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;).concat(')')"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('durability') = 'default') and (self.durability &lt;> self.oclAsType(ecore::EObject).eContainer().oclAsType(Clabject).potency)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = &#xD;&#xA;&#x9;self.getDurabilityAsString()&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let output:OrderedSet(Parameter) = self.getInput()&#xD;&#xA;in&#xD;&#xA;if (output->size() > 0) then&#xD;&#xA;&#x9;':'.concat(Sequence{1..output->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;       &#x9;     &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;&#x9;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;&#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;&#x9;in&#xD;&#xA;       &#x9;         &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;&#x9;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;              &#x9;  &#x9;&#x9;endif&#xD;&#xA;       &#x9; &#x9;)&#xD;&#xA;&#x9;&#x9;in&#xD;&#xA;&#x9;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(output->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(output->at(i).name)&#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;)&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="let disjoint:String = &#xD;&#xA;&#x9;if (not self.disjoint.oclIsUndefined() and self.disjoint) then &#xD;&#xA;&#x9;&#x9;'disjoint;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let complete:String = &#xD;&#xA;&#x9;if (not self.complete.oclIsUndefined() and self.complete) then &#xD;&#xA;&#x9;&#x9;'complete;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (disjoint &lt;> '' or complete &lt;> '') then&#xD;&#xA;&#x9;'{'.concat(complete).concat(disjoint).concat('}')&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'default'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderName and not self.name.oclIsUndefined()) then&#xD;&#xA;&#x9;self.name&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('levelIndex') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('levelIndex') = 'default'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderLevel) then&#xD;&#xA;&#x9;self.levelIndex&#xD;&#xA;else&#xD;&#xA;&#x9;' '&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('potency') = 'default') -- and (self.potency &lt;> 1)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let potency:String = if (self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderPotency) then&#xD;&#xA;&#x9;potency&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in tvs&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'tvs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('level') = 'max'&#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('level') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let potencyString:String = &#xD;&#xA;&#x9;if (renderPotency and self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let potency: String = &#xD;&#xA;&#x9;if (renderPotency) then&#xD;&#xA;&#x9;&#x9;'potency='.concat(potencyString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the level&#xD;&#xA;--**********************************&#xD;&#xA;let levelString:String = &#xD;&#xA;&#x9;if (renderLevel and self.levelIndex > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.levelIndex.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.levelIndex = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let level: String = &#xD;&#xA;&#x9;if (renderLevel) then&#xD;&#xA;&#x9;&#x9;'level='.concat(levelString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(potency).concat(level).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderClassification:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('ProximityClassification') = '1' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderClassification) then&#xD;&#xA;&#x9;if (Classification.allInstances()->select(i | i.instance = self)->size() > 0) then&#xD;&#xA;&#x9;&#x9;':'.concat(Classification.allInstances()->select(i | i.instance = self)->asOrderedSet()->first().type.name)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'default'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderName and not self.name.oclIsUndefined()) then&#xD;&#xA;&#x9;self.name&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;(visualizer.getValueForKey('potency') = 'default') -- and (self.potency &lt;> 1)&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let potency:String =&#xD;&#xA;&#x9;self.getPotencyAsString()&#xD;&#xA;in&#xD;&#xA;if (renderPotency) then&#xD;&#xA;&#x9;potency&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('levelIndex') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('levelIndex') = 'default'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderLevel) then&#xD;&#xA;&#x9;self.levelIndex&#xD;&#xA;else&#xD;&#xA;&#x9;' '&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in tvs&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('potency') = 'tvs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('level') = 'max'&#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('level') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let potencyString:String = &#xD;&#xA;&#x9;if (renderPotency and self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let potency: String = &#xD;&#xA;&#x9;if (renderPotency) then&#xD;&#xA;&#x9;&#x9;'potency='.concat(potencyString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the level&#xD;&#xA;--**********************************&#xD;&#xA;let levelString:String = &#xD;&#xA;&#x9;if (renderLevel and self.levelIndex > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.levelIndex.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.levelIndex = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let level: String = &#xD;&#xA;&#x9;if (renderLevel) then&#xD;&#xA;&#x9;&#x9;'level='.concat(levelString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(potency).concat(level).concat('}')&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.getDefaultVisualizationValues()"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in tvs&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="if(self.oclAsType(ecore::EObject).eContainer().oclAsType(Domain).complianceKind = ComplianceKind::MetaDepth) then&#xD;&#xA;&#x9;'Please keep in mind that the feature sets of Melanee and MetaDepth diverge.'&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let visualizer:LMLVisualizer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.visualizer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in tvs&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;visualizer.getValueForKey('name') = 'tvs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderConnectionEndName:Boolean=&#xD;&#xA;&#x9;if (DeepModel.allInstances()->asSequence()->at(1).visualizer->asSequence()->at(1).getValueForKey('showClassificationConnectionEndNames') = 'true') then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderConnectionEndName and self.kind = ClassificationKind::instantiation) then&#xD;&#xA;&#x9;'blueprint'&#xD;&#xA;else&#xD;&#xA;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::instance) then&#xD;&#xA;&#x9;&#x9;'type'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::isonym) then&#xD;&#xA;&#x9;&#x9;&#x9;'complete type'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::hyponym) then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;'incomplete type'&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;''&#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          body="let renderConnectionEndName:Boolean=&#xD;&#xA;&#x9;if (DeepModel.allInstances()->asSequence()->at(1).visualizer->asSequence()->at(1).getValueForKey('showClassificationConnectionEndNames') = 'true') then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderConnectionEndName and self.kind = ClassificationKind::instantiation) then&#xD;&#xA;&#x9;'offspring'&#xD;&#xA;else&#xD;&#xA;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::instance) then&#xD;&#xA;&#x9;&#x9;'instance'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::isonym) then&#xD;&#xA;&#x9;&#x9;&#x9;'isonym'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;if (renderConnectionEndName and self.kind = ClassificationKind::hyponym) then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;'hyponym'&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;''&#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.potency &lt;> 0 and self.levelIndex &lt; oppositeEnd.levelIndex"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.getLevel() = self.getLevel()"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.getLevel() = self.getLevel()"/>
      <expressions
          body="if (self.moniker.oclIsUndefined()) then&#xD;&#xA;&#x9;''&#xD;&#xA;else&#xD;&#xA;&#x9;self.moniker&#xD;&#xA;endif"/>
      <expressions
          body="--A participation has no visualizer yet&#xD;&#xA;--let renderingInformationAvailable:Boolean = &#xD;&#xA;--&#x9;if (self.visualizer->size() > 0) then&#xD;&#xA;--&#x9;&#x9;true&#xD;&#xA;--&#x9;else&#xD;&#xA;--&#x9;&#x9;false&#xD;&#xA;--&#x9;endif&#xD;&#xA;--in&#xD;&#xA;&#xD;&#xA;--is a visualizer present?&#xD;&#xA;--let visualizer:LMLVisualizer =&#xD;&#xA;--&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;--&#x9;&#x9;self.visualizer->first()&#xD;&#xA;--&#x9;else&#xD;&#xA;--&#x9;&#x9;null&#xD;&#xA;--&#x9;endif&#xD;&#xA;--in&#xD;&#xA;&#xD;&#xA;--here for the DSL mode needs to be checked&#xD;&#xA;let multiplicityPotency:Boolean = true&#xD;&#xA;--&#x9;if (renderingInformationAvailable) then&#xD;&#xA;--&#x9;&#x9;visualizer.getValueForKey('potency') = 'max' &#xD;&#xA;--&#x9;&#x9;&#x9;or &#xD;&#xA;--&#x9;&#x9;(visualizer.getValueForKey('potency') = 'default') and (self.potency &lt;> 1)&#xD;&#xA;--&#x9;else&#xD;&#xA;--&#x9;&#x9;true&#xD;&#xA;--&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--If lower is null we do not want to show anything in the label&#xD;&#xA;let lowerIsNull:Boolean = self.lower.oclIsUndefined() in&#xD;&#xA;&#xD;&#xA;let lowerString:String = if (self.lower > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.lower.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.lower = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let upperString:String = if (self.upper > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.upper.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.upper = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (not lowerIsNull) then&#xD;&#xA;&#x9;if (self.lower = 0 and self.upper = -1) then&#xD;&#xA;&#x9;&#x9;'*'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;if (self.lower = self.upper) then&#xD;&#xA;&#x9;&#x9;&#x9;self.lower&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;lowerString.concat('..').concat(upperString)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.levelIndex = oppositeEnd.levelIndex"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="true"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.0/@labels.1/@modelFacet //@diagram/@childNodes.3/@labels.0/@modelFacet //@diagram/@childNodes.4/@labels.0/@modelFacet //@diagram/@childNodes.6/@labels.0/@modelFacet //@diagram/@childNodes.7/@labels.0/@modelFacet //@diagram/@childNodes.9/@labels.0/@modelFacet //@diagram/@childNodes.9/@labels.1/@modelFacet //@diagram/@childNodes.8/@labels.1/@modelFacet //@diagram/@childNodes.2/@labels.1/@modelFacet //@diagram/@childNodes.10/@labels.0/@modelFacet //@diagram/@childNodes.10/@labels.1/@modelFacet //@diagram/@childNodes.14/@labels.1/@modelFacet //@diagram/@childNodes.15/@labels.0/@modelFacet //@diagram/@childNodes.15/@labels.1/@modelFacet //@diagram/@childNodes.16/@labels.0/@modelFacet //@diagram/@childNodes.12/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.1/@modelFacet"
        className="AttributeLabelExpressionLabelParser5255"
        viewExpression="//@expressionProviders/@providers.0/@expressions.7">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.2/@modelFacet"
        className="AttributeLabelExpressionLabelParser5256"
        viewExpression="//@expressionProviders/@providers.0/@expressions.8">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.3/@modelFacet"
        className="AttributeLabelExpressionLabelParser5257"
        viewExpression="//@expressionProviders/@providers.0/@expressions.9">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.4/@modelFacet"
        className="AttributeLabelExpressionLabelParser5258"
        viewExpression="//@expressionProviders/@providers.0/@expressions.10">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.4/@labels.1/@modelFacet"
        className="MethodLabelExpressionLabelParser5262"
        viewExpression="//@expressionProviders/@providers.0/@expressions.13">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.4/@labels.2/@modelFacet"
        className="MethodLabelExpressionLabelParser5263"
        viewExpression="//@expressionProviders/@providers.0/@expressions.14">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.4/@labels.3/@modelFacet"
        className="MethodLabelExpressionLabelParser5264"
        viewExpression="//@expressionProviders/@providers.0/@expressions.15">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.1/@modelFacet"
        className="AttributeLabelExpressionLabelParser5270"
        viewExpression="//@expressionProviders/@providers.0/@expressions.20">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.2/@modelFacet"
        className="AttributeLabelExpressionLabelParser5271"
        viewExpression="//@expressionProviders/@providers.0/@expressions.21">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.3/@modelFacet"
        className="AttributeLabelExpressionLabelParser5272"
        viewExpression="//@expressionProviders/@providers.0/@expressions.22">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.4/@modelFacet"
        className="AttributeLabelExpressionLabelParser5273"
        viewExpression="//@expressionProviders/@providers.0/@expressions.23">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.7/@labels.1/@modelFacet"
        className="MethodLabelExpressionLabelParser5277"
        viewExpression="//@expressionProviders/@providers.0/@expressions.26">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.7/@labels.2/@modelFacet"
        className="MethodLabelExpressionLabelParser5278"
        viewExpression="//@expressionProviders/@providers.0/@expressions.27">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.7/@labels.3/@modelFacet"
        className="MethodLabelExpressionLabelParser5279"
        viewExpression="//@expressionProviders/@providers.0/@expressions.28">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.9/@labels.2/@modelFacet"
        className="InheritanceLabelExpressionLabelParser5335"
        viewExpression="//@expressionProviders/@providers.0/@expressions.30">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.8/@labels.0/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5282"
        viewExpression="//@expressionProviders/@providers.0/@expressions.31">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.8/@labels.2/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5284"
        viewExpression="//@expressionProviders/@providers.0/@expressions.32">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.8/@labels.3/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5285"
        viewExpression="//@expressionProviders/@providers.0/@expressions.33">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.8/@labels.4/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5286"
        viewExpression="//@expressionProviders/@providers.0/@expressions.34">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.8/@labels.5/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5287"
        viewExpression="//@expressionProviders/@providers.0/@expressions.35">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.0/@modelFacet"
        className="EntityLabelExpressionLabelParser5288"
        viewExpression="//@expressionProviders/@providers.0/@expressions.36">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.1/@modelFacet"
        className="EntityLabelExpressionLabelParser5289"
        viewExpression="//@expressionProviders/@providers.0/@expressions.37">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.2/@modelFacet"
        className="EntityLabelExpressionLabelParser5290"
        viewExpression="//@expressionProviders/@providers.0/@expressions.38">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.3/@modelFacet"
        className="EntityLabelExpressionLabelParser5291"
        viewExpression="//@expressionProviders/@providers.0/@expressions.39">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@childNodes.5/@labels.4/@modelFacet //@diagram/@childNodes.5/@labels.5/@modelFacet //@diagram/@childNodes.11/@labels.4/@modelFacet //@diagram/@childNodes.11/@labels.5/@modelFacet //@diagram/@childNodes.13/@labels.4/@modelFacet //@diagram/@childNodes.13/@labels.5/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.0/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5294"
        viewExpression="//@expressionProviders/@providers.0/@expressions.31">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.2/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5296"
        viewExpression="//@expressionProviders/@providers.0/@expressions.32">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.3/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5297"
        viewExpression="//@expressionProviders/@providers.0/@expressions.33">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.4/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5298"
        viewExpression="//@expressionProviders/@providers.0/@expressions.34">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.5/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5299"
        viewExpression="//@expressionProviders/@providers.0/@expressions.35">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.10/@labels.2/@modelFacet"
        className="InheritanceLabelExpressionLabelParser5328"
        viewExpression="//@expressionProviders/@providers.0/@expressions.30">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.0/@modelFacet"
        className="EntityLabelExpressionLabelParser5314"
        viewExpression="//@expressionProviders/@providers.0/@expressions.36">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.1/@modelFacet"
        className="EntityLabelExpressionLabelParser5315"
        viewExpression="//@expressionProviders/@providers.0/@expressions.37">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.2/@modelFacet"
        className="EntityLabelExpressionLabelParser5316"
        viewExpression="//@expressionProviders/@providers.0/@expressions.38">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.3/@modelFacet"
        className="EntityLabelExpressionLabelParser5317"
        viewExpression="//@expressionProviders/@providers.0/@expressions.39">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.0/@modelFacet"
        className="EntityLabelExpressionLabelParser5337"
        viewExpression="//@expressionProviders/@providers.0/@expressions.36">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.1/@modelFacet"
        className="EntityLabelExpressionLabelParser5338"
        viewExpression="//@expressionProviders/@providers.0/@expressions.37">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.2/@modelFacet"
        className="EntityLabelExpressionLabelParser5339"
        viewExpression="//@expressionProviders/@providers.0/@expressions.38">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.3/@modelFacet"
        className="EntityLabelExpressionLabelParser5340"
        viewExpression="//@expressionProviders/@providers.0/@expressions.39">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.0/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5343"
        viewExpression="//@expressionProviders/@providers.0/@expressions.31">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.2/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5345"
        viewExpression="//@expressionProviders/@providers.0/@expressions.32">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.3/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5346"
        viewExpression="//@expressionProviders/@providers.0/@expressions.33">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.4/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5347"
        viewExpression="//@expressionProviders/@providers.0/@expressions.34">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.5/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5348"
        viewExpression="//@expressionProviders/@providers.0/@expressions.35">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.15/@labels.2/@modelFacet"
        className="InheritanceLabelExpressionLabelParser5351"
        viewExpression="//@expressionProviders/@providers.0/@expressions.30">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Inheritance"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.1/@labels.1/@modelFacet"
        className="LevelLabelExpressionLabelParser5321"
        viewExpression="//@expressionProviders/@providers.0/@expressions.41">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Level"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@topLevelNodes.0/@labels.1/@modelFacet"
        className="DeepModelLabelExpressionLabelParser5332"
        viewExpression="//@expressionProviders/@providers.0/@expressions.42">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@topLevelNodes.0/@labels.2/@modelFacet"
        className="DeepModelLabelExpressionLabelParser5353"
        viewExpression="//@expressionProviders/@providers.0/@expressions.43">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/DeepModel"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@links.0/@labels.0/@modelFacet"
        className="ClassificationLabelExpressionLabelParser6016"
        viewExpression="//@expressionProviders/@providers.0/@expressions.44">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Classification"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@links.0/@labels.1/@modelFacet"
        className="ClassificationLabelExpressionLabelParser6017"
        viewExpression="//@expressionProviders/@providers.0/@expressions.45">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/Classification"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@links.3/@labels.0/@modelFacet"
        className="ConnectionEndLabelExpressionLabelParser6024"
        viewExpression="//@expressionProviders/@providers.0/@expressions.49">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/ConnectionEnd"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@links.3/@labels.1/@modelFacet"
        className="ConnectionEndLabelExpressionLabelParser6025"
        viewExpression="//@expressionProviders/@providers.0/@expressions.50">
      <expressionContext
          href="../../org.melanee.core.models.plm/model/PLM.genmodel#//PLM/ConnectionEnd"/>
    </implementations>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
